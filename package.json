{
  "name": "automated-timetable-generator",
  "version": "2.0.0",
  "description": "A sophisticated TypeScript-based system for generating optimized academic timetables with constraint satisfaction, conflict resolution, and multiple export formats",
  "main": "dist/main.js",
  "types": "dist/main.d.ts",
  "bin": {
    "timetable-generator": "dist/main.js"
  },
  "scripts": {
    "start": "node dist/main.js",
    "start:server": "node dist/server.js",
    "start:frontend": "cd frontend && npm start",
    "build:server": "tsc src/server.ts --outDir dist --target ES2020 --module commonjs --esModuleInterop --skipLibCheck",
    "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
    "build": "tsc -p tsconfig.build.json && npm run copy-assets",
    "build:full": "tsc && npm run copy-assets",
    "build:watch": "tsc --watch",
    "clean": "rimraf dist coverage .nyc_output",
    "copy-assets": "copyfiles -u 1 src/assets/**/* dist/",
    "lint": "eslint src/**/*.ts test/**/*.ts",
    "lint:fix": "eslint src/**/*.ts test/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts test/**/*.ts",
    "format:check": "prettier --check src/**/*.ts test/**/*.ts",
    "type-check": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:performance": "jest --testPathPattern=performance --runInBand",
    "test:integration:full": "jest --testPathPattern=integration --verbose --runInBand",
    "test:quick": "jest --testPathPattern=unit --passWithNoTests",
    "test:ci": "jest --coverage --ci --watchAll=false",
    "generate": "node dist/cli.js generate",
    "analyze": "node dist/cli.js analyze",
    "validate": "node dist/cli.js validate",
    "export": "node dist/cli.js export",
    "conflicts": "node dist/cli.js conflicts",
    "resolve-conflicts": "node dist/cli.js resolve-conflicts",
    "batch": "node dist/cli.js batch",
    "split": "node dist/cli.js split",
    "workload": "node dist/cli.js workload",
    "validate-slots": "node dist/cli.js validate-slots",
    "fix-csv": "node dist/cli.js fix-csv",
    "convert": "node dist/cli.js convert",
    "doctor": "node dist/cli.js doctor",
    "verify-deps": "node dist/cli.js verify-deps",
    "data-quality": "node dist/cli.js data-quality",
    "profile": "node dist/cli.js profile",
    "memory-profile": "node dist/cli.js memory-profile",
    "benchmark": "node dist/cli.js benchmark",
    "help": "node dist/cli.js --help",
    "version": "node dist/cli.js --version",
    "check-compatibility": "node dist/cli.js check-compatibility",
    "api-server": "node dist/api-server.js",
    "webhook": "node dist/webhook.js",
    "docs:generate": "typedoc src --out docs/api --theme default",
    "docs:serve": "http-server docs -p 8080",
    "prepublishOnly": "npm run clean && npm run build && npm test",
    "postinstall": "node scripts/postinstall.js",
    "prepack": "npm run build"
  },
  "keywords": [
    "timetable",
    "schedule",
    "generator",
    "academic",
    "education",
    "constraint-satisfaction",
    "optimization",
    "typescript",
    "algorithm",
    "backtracking",
    "scheduling",
    "conflict-resolution",
    "csv",
    "json",
    "html",
    "export"
  ],
  "author": {
    "name": "Timetable Generator Team",
    "email": "team@timetable-generator.com",
    "url": "https://github.com/your-org/automated-timetable-generator"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/automated-timetable-generator.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/automated-timetable-generator/issues"
  },
  "homepage": "https://github.com/your-org/automated-timetable-generator#readme",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=7.0.0"
  },
  "dependencies": {
    "@types/readline-sync": "^1.4.8",
    "chalk": "^5.3.0",
    "commander": "^11.1.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "csv-parser": "^3.0.0",
    "csv-writer": "^1.6.0",
    "date-fns": "^2.30.0",
    "express": "^4.18.2",
    "helmet": "^7.1.0",
    "inquirer": "^9.2.12",
    "joi": "^17.11.0",
    "lodash": "^4.17.21",
    "ora": "^7.0.1",
    "progress": "^2.0.3",
    "rate-limiter-flexible": "^4.0.1",
    "readline-sync": "^1.4.10",
    "uuid": "^9.0.1",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.8.1",
    "@commitlint/config-conventional": "^17.8.1",
    "@jest/globals": "^29.7.0",
    "@types/compression": "^1.7.4",
    "@types/cors": "^2.8.15",
    "@types/express": "^4.17.20",
    "@types/inquirer": "^9.0.6",
    "@types/jest": "^29.5.5",
    "@types/lodash": "^4.14.199",
    "@types/node": "^20.8.0",
    "@types/sinon": "^10.0.20",
    "@types/uuid": "^9.0.5",
    "@typescript-eslint/eslint-plugin": "^6.7.4",
    "@typescript-eslint/parser": "^6.7.4",
    "commitizen": "^4.3.0",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "http-server": "^14.1.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.0.2",
    "nock": "^13.3.8",
    "nyc": "^15.1.0",
    "prettier": "^3.0.3",
    "rimraf": "^5.0.5",
    "sinon": "^16.1.0",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "typedoc": "^0.25.2",
    "typescript": "^5.2.2"
  },
  "peerDependencies": {
    "typescript": ">=5.0.0"
  },
  "files": [
    "dist/**/*",
    "docs/**/*",
    "README.md",
    "CHANGELOG.md",
    "LICENSE"
  ],
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/test"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/index.ts",
      "!src/cli.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "json"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 85,
        "lines": 85,
        "statements": 85
      }
    },
    "setupFilesAfterEnv": [
      "<rootDir>/test/setup.ts"
    ],
    "testTimeout": 30000,
    "maxWorkers": "50%"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "@typescript-eslint/recommended",
      "prettier"
    ],
    "plugins": [
      "@typescript-eslint",
      "prettier"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/prefer-const": "error",
      "@typescript-eslint/no-var-requires": "error",
      "prefer-const": "error",
      "no-var": "error",
      "prettier/prettier": "error"
    },
    "env": {
      "node": true,
      "jest": true
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false,
    "endOfLine": "lf"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{md,json}": [
      "prettier --write"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "check-coverage": true,
    "all": true,
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [
      "src/**/*.d.ts",
      "src/index.ts",
      "src/cli.ts"
    ],
    "reporter": [
      "html",
      "lcov",
      "text",
      "text-summary"
    ],
    "report-dir": "coverage"
  },
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/your-org"
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  }
}
